name: CI/CD Pipeline of dqlang

on:
  push:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_and_test:
    name: Build, Test and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure Git
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub Release Workflow"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Get Artifact version
        run: |
          export ARTIFACT_VERSION=$( ./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}' | sed "s/-SNAPSHOT$//" )
          echo "Retrieved Artifact Version: $ARTIFACT_VERSION"
          echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew --no-daemon build

      - name: Perform Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Performing release of version ${{ env.ARTIFACT_VERSION }}"
          ./gradlew --no-daemon release -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=${{ env.ARTIFACT_VERSION }}
          git checkout tags/${{ env.ARTIFACT_VERSION }}
          ./gradlew --no-daemon publish

      - name: Perform Snapshot Release
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Performing snapshot release of version ${{ env.ARTIFACT_VERSION }}-${{ github.ref_name }}-SNAPSHOT"
          ./gradlew --no-daemon -q release publish -x preTagCommit -x updateVersion -x commitNewVersion -Prelease.releaseVersion=${{ env.ARTIFACT_VERSION }}-${{ github.ref_name }}-SNAPSHOT   
