name: CI/CD Pipeline of dqlang

on:
  push:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_and_test:
    name: Build, Test and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure Git
        run: |
          git config --global committer.email "noreply@github.com"
          git config --global committer.name "GitHub Release Workflow"
          git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --global author.name "${GITHUB_ACTOR}"

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Get Artifact version
        run: |
          export ARTIFACT_VERSION=$( ./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}' | sed "s/-SNAPSHOT$//" )
          echo "Retrieved Artifact Version: $ARTIFACT_VERSION"
          echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew --no-daemon build

      - name: Perform Snapshot Release
        if: github.ref != 'refs/heads/main'
        run: |
            SNAPSHOT_VERSION="${{ env.ARTIFACT_VERSION }}"
            echo "Performing snapshot release of version $SNAPSHOT_VERSION"

            # Remove "SNAPSHOT" from anywhere, if present
            SNAPSHOT_VERSION="${SNAPSHOT_VERSION//"-SNAPSHOT"/}"
            
            # Ensure SNAPSHOT_VERSION includes branch name
            if [[ $SNAPSHOT_VERSION != *${{ github.ref_name }}* ]]; then
              SNAPSHOT_VERSION="$SNAPSHOT_VERSION-${{ github.ref_name }}"
            fi
            
            # Ensure SNAPSHOT_VERSION does end with '-SNAPSHOT'
            if [[ $SNAPSHOT_VERSION != *"-SNAPSHOT" ]]; then
              SNAPSHOT_VERSION="$SNAPSHOT_VERSION-SNAPSHOT"
            fi
              
             ./gradlew --no-daemon release -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=$SNAPSHOT_VERSION
             git checkout tags/$SNAPSHOT_VERSION
             ./gradlew --no-daemon publish
